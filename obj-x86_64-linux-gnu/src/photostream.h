/* photostream.h generated by valac 0.26.1.9-22126, the Vala compiler, do not modify */


#ifndef __PHOTOSTREAM_H__
#define __PHOTOSTREAM_H__

#include <glib.h>
#include <granite.h>
#include <gtk/gtk.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <json-glib/json-glib.h>
#include <libxml/tree.h>
#include <glib-object.h>
#include <gdk-pixbuf/gdk-pixbuf.h>
#include <gst/gst.h>

G_BEGIN_DECLS


#define PHOTO_STREAM_TYPE_APP (photo_stream_app_get_type ())
#define PHOTO_STREAM_APP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_TYPE_APP, PhotoStreamApp))
#define PHOTO_STREAM_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_TYPE_APP, PhotoStreamAppClass))
#define PHOTO_STREAM_IS_APP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_TYPE_APP))
#define PHOTO_STREAM_IS_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_TYPE_APP))
#define PHOTO_STREAM_APP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_TYPE_APP, PhotoStreamAppClass))

typedef struct _PhotoStreamApp PhotoStreamApp;
typedef struct _PhotoStreamAppClass PhotoStreamAppClass;
typedef struct _PhotoStreamAppPrivate PhotoStreamAppPrivate;

#define PHOTO_STREAM_TYPE_MAIN_WINDOW (photo_stream_main_window_get_type ())
#define PHOTO_STREAM_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_TYPE_MAIN_WINDOW, PhotoStreamMainWindow))
#define PHOTO_STREAM_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_TYPE_MAIN_WINDOW, PhotoStreamMainWindowClass))
#define PHOTO_STREAM_IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_TYPE_MAIN_WINDOW))
#define PHOTO_STREAM_IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_TYPE_MAIN_WINDOW))
#define PHOTO_STREAM_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_TYPE_MAIN_WINDOW, PhotoStreamMainWindowClass))

typedef struct _PhotoStreamMainWindow PhotoStreamMainWindow;
typedef struct _PhotoStreamMainWindowClass PhotoStreamMainWindowClass;

#define PHOTO_STREAM_TYPE_LOGIN_WINDOW (photo_stream_login_window_get_type ())
#define PHOTO_STREAM_LOGIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_TYPE_LOGIN_WINDOW, PhotoStreamLoginWindow))
#define PHOTO_STREAM_LOGIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_TYPE_LOGIN_WINDOW, PhotoStreamLoginWindowClass))
#define PHOTO_STREAM_IS_LOGIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_TYPE_LOGIN_WINDOW))
#define PHOTO_STREAM_IS_LOGIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_TYPE_LOGIN_WINDOW))
#define PHOTO_STREAM_LOGIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_TYPE_LOGIN_WINDOW, PhotoStreamLoginWindowClass))

typedef struct _PhotoStreamLoginWindow PhotoStreamLoginWindow;
typedef struct _PhotoStreamLoginWindowClass PhotoStreamLoginWindowClass;

#define PHOTO_STREAM_TYPE_SETTINGS_WINDOW (photo_stream_settings_window_get_type ())
#define PHOTO_STREAM_SETTINGS_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_TYPE_SETTINGS_WINDOW, PhotoStreamSettingsWindow))
#define PHOTO_STREAM_SETTINGS_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_TYPE_SETTINGS_WINDOW, PhotoStreamSettingsWindowClass))
#define PHOTO_STREAM_IS_SETTINGS_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_TYPE_SETTINGS_WINDOW))
#define PHOTO_STREAM_IS_SETTINGS_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_TYPE_SETTINGS_WINDOW))
#define PHOTO_STREAM_SETTINGS_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_TYPE_SETTINGS_WINDOW, PhotoStreamSettingsWindowClass))

typedef struct _PhotoStreamSettingsWindow PhotoStreamSettingsWindow;
typedef struct _PhotoStreamSettingsWindowClass PhotoStreamSettingsWindowClass;

#define PHOTO_STREAM_WIDGETS_TYPE_PHOTO_STACK (photo_stream_widgets_photo_stack_get_type ())
#define PHOTO_STREAM_WIDGETS_PHOTO_STACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_PHOTO_STACK, PhotoStreamWidgetsPhotoStack))
#define PHOTO_STREAM_WIDGETS_PHOTO_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_PHOTO_STACK, PhotoStreamWidgetsPhotoStackClass))
#define PHOTO_STREAM_WIDGETS_IS_PHOTO_STACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_PHOTO_STACK))
#define PHOTO_STREAM_WIDGETS_IS_PHOTO_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_PHOTO_STACK))
#define PHOTO_STREAM_WIDGETS_PHOTO_STACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_PHOTO_STACK, PhotoStreamWidgetsPhotoStackClass))

typedef struct _PhotoStreamWidgetsPhotoStack PhotoStreamWidgetsPhotoStack;
typedef struct _PhotoStreamWidgetsPhotoStackClass PhotoStreamWidgetsPhotoStackClass;

#define PHOTO_STREAM_WIDGETS_TYPE_USER_WINDOW_BOX (photo_stream_widgets_user_window_box_get_type ())
#define PHOTO_STREAM_WIDGETS_USER_WINDOW_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_WINDOW_BOX, PhotoStreamWidgetsUserWindowBox))
#define PHOTO_STREAM_WIDGETS_USER_WINDOW_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_USER_WINDOW_BOX, PhotoStreamWidgetsUserWindowBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_USER_WINDOW_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_WINDOW_BOX))
#define PHOTO_STREAM_WIDGETS_IS_USER_WINDOW_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_USER_WINDOW_BOX))
#define PHOTO_STREAM_WIDGETS_USER_WINDOW_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_WINDOW_BOX, PhotoStreamWidgetsUserWindowBoxClass))

typedef struct _PhotoStreamWidgetsUserWindowBox PhotoStreamWidgetsUserWindowBox;
typedef struct _PhotoStreamWidgetsUserWindowBoxClass PhotoStreamWidgetsUserWindowBoxClass;

#define PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_FEED_BOX (photo_stream_widgets_hash_tag_feed_box_get_type ())
#define PHOTO_STREAM_WIDGETS_HASH_TAG_FEED_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_FEED_BOX, PhotoStreamWidgetsHashTagFeedBox))
#define PHOTO_STREAM_WIDGETS_HASH_TAG_FEED_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_FEED_BOX, PhotoStreamWidgetsHashTagFeedBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_HASH_TAG_FEED_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_FEED_BOX))
#define PHOTO_STREAM_WIDGETS_IS_HASH_TAG_FEED_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_FEED_BOX))
#define PHOTO_STREAM_WIDGETS_HASH_TAG_FEED_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_FEED_BOX, PhotoStreamWidgetsHashTagFeedBoxClass))

typedef struct _PhotoStreamWidgetsHashTagFeedBox PhotoStreamWidgetsHashTagFeedBox;
typedef struct _PhotoStreamWidgetsHashTagFeedBoxClass PhotoStreamWidgetsHashTagFeedBoxClass;

#define PHOTO_STREAM_WIDGETS_TYPE_LOCATION_FEED_BOX (photo_stream_widgets_location_feed_box_get_type ())
#define PHOTO_STREAM_WIDGETS_LOCATION_FEED_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_LOCATION_FEED_BOX, PhotoStreamWidgetsLocationFeedBox))
#define PHOTO_STREAM_WIDGETS_LOCATION_FEED_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_LOCATION_FEED_BOX, PhotoStreamWidgetsLocationFeedBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_LOCATION_FEED_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_LOCATION_FEED_BOX))
#define PHOTO_STREAM_WIDGETS_IS_LOCATION_FEED_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_LOCATION_FEED_BOX))
#define PHOTO_STREAM_WIDGETS_LOCATION_FEED_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_LOCATION_FEED_BOX, PhotoStreamWidgetsLocationFeedBoxClass))

typedef struct _PhotoStreamWidgetsLocationFeedBox PhotoStreamWidgetsLocationFeedBox;
typedef struct _PhotoStreamWidgetsLocationFeedBoxClass PhotoStreamWidgetsLocationFeedBoxClass;

#define PHOTO_STREAM_WIDGETS_TYPE_SEARCH_WINDOW_BOX (photo_stream_widgets_search_window_box_get_type ())
#define PHOTO_STREAM_WIDGETS_SEARCH_WINDOW_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_SEARCH_WINDOW_BOX, PhotoStreamWidgetsSearchWindowBox))
#define PHOTO_STREAM_WIDGETS_SEARCH_WINDOW_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_SEARCH_WINDOW_BOX, PhotoStreamWidgetsSearchWindowBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_SEARCH_WINDOW_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_SEARCH_WINDOW_BOX))
#define PHOTO_STREAM_WIDGETS_IS_SEARCH_WINDOW_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_SEARCH_WINDOW_BOX))
#define PHOTO_STREAM_WIDGETS_SEARCH_WINDOW_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_SEARCH_WINDOW_BOX, PhotoStreamWidgetsSearchWindowBoxClass))

typedef struct _PhotoStreamWidgetsSearchWindowBox PhotoStreamWidgetsSearchWindowBox;
typedef struct _PhotoStreamWidgetsSearchWindowBoxClass PhotoStreamWidgetsSearchWindowBoxClass;

#define PHOTO_STREAM_WIDGETS_TYPE_POST_LIST (photo_stream_widgets_post_list_get_type ())
#define PHOTO_STREAM_WIDGETS_POST_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_POST_LIST, PhotoStreamWidgetsPostList))
#define PHOTO_STREAM_WIDGETS_POST_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_POST_LIST, PhotoStreamWidgetsPostListClass))
#define PHOTO_STREAM_WIDGETS_IS_POST_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_POST_LIST))
#define PHOTO_STREAM_WIDGETS_IS_POST_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_POST_LIST))
#define PHOTO_STREAM_WIDGETS_POST_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_POST_LIST, PhotoStreamWidgetsPostListClass))

typedef struct _PhotoStreamWidgetsPostList PhotoStreamWidgetsPostList;
typedef struct _PhotoStreamWidgetsPostListClass PhotoStreamWidgetsPostListClass;

#define PHOTO_STREAM_WIDGETS_TYPE_COMMENTS_LIST (photo_stream_widgets_comments_list_get_type ())
#define PHOTO_STREAM_WIDGETS_COMMENTS_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_COMMENTS_LIST, PhotoStreamWidgetsCommentsList))
#define PHOTO_STREAM_WIDGETS_COMMENTS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_COMMENTS_LIST, PhotoStreamWidgetsCommentsListClass))
#define PHOTO_STREAM_WIDGETS_IS_COMMENTS_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_COMMENTS_LIST))
#define PHOTO_STREAM_WIDGETS_IS_COMMENTS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_COMMENTS_LIST))
#define PHOTO_STREAM_WIDGETS_COMMENTS_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_COMMENTS_LIST, PhotoStreamWidgetsCommentsListClass))

typedef struct _PhotoStreamWidgetsCommentsList PhotoStreamWidgetsCommentsList;
typedef struct _PhotoStreamWidgetsCommentsListClass PhotoStreamWidgetsCommentsListClass;

#define PHOTO_STREAM_WIDGETS_TYPE_USER_LIST (photo_stream_widgets_user_list_get_type ())
#define PHOTO_STREAM_WIDGETS_USER_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_LIST, PhotoStreamWidgetsUserList))
#define PHOTO_STREAM_WIDGETS_USER_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_USER_LIST, PhotoStreamWidgetsUserListClass))
#define PHOTO_STREAM_WIDGETS_IS_USER_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_LIST))
#define PHOTO_STREAM_WIDGETS_IS_USER_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_USER_LIST))
#define PHOTO_STREAM_WIDGETS_USER_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_LIST, PhotoStreamWidgetsUserListClass))

typedef struct _PhotoStreamWidgetsUserList PhotoStreamWidgetsUserList;
typedef struct _PhotoStreamWidgetsUserListClass PhotoStreamWidgetsUserListClass;

#define PHOTO_STREAM_WIDGETS_TYPE_NEWS_LIST (photo_stream_widgets_news_list_get_type ())
#define PHOTO_STREAM_WIDGETS_NEWS_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_NEWS_LIST, PhotoStreamWidgetsNewsList))
#define PHOTO_STREAM_WIDGETS_NEWS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_NEWS_LIST, PhotoStreamWidgetsNewsListClass))
#define PHOTO_STREAM_WIDGETS_IS_NEWS_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_NEWS_LIST))
#define PHOTO_STREAM_WIDGETS_IS_NEWS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_NEWS_LIST))
#define PHOTO_STREAM_WIDGETS_NEWS_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_NEWS_LIST, PhotoStreamWidgetsNewsListClass))

typedef struct _PhotoStreamWidgetsNewsList PhotoStreamWidgetsNewsList;
typedef struct _PhotoStreamWidgetsNewsListClass PhotoStreamWidgetsNewsListClass;

#define PHOTO_STREAM_UTILS_TYPE_HISTORY_ENTRY (photo_stream_utils_history_entry_get_type ())
#define PHOTO_STREAM_UTILS_HISTORY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_HISTORY_ENTRY, PhotoStreamUtilsHistoryEntry))
#define PHOTO_STREAM_UTILS_HISTORY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_HISTORY_ENTRY, PhotoStreamUtilsHistoryEntryClass))
#define PHOTO_STREAM_UTILS_IS_HISTORY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_HISTORY_ENTRY))
#define PHOTO_STREAM_UTILS_IS_HISTORY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_HISTORY_ENTRY))
#define PHOTO_STREAM_UTILS_HISTORY_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_HISTORY_ENTRY, PhotoStreamUtilsHistoryEntryClass))

typedef struct _PhotoStreamUtilsHistoryEntry PhotoStreamUtilsHistoryEntry;
typedef struct _PhotoStreamUtilsHistoryEntryClass PhotoStreamUtilsHistoryEntryClass;

#define PHOTO_STREAM_UTILS_TYPE_MEDIA_INFO (photo_stream_utils_media_info_get_type ())
#define PHOTO_STREAM_UTILS_MEDIA_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_MEDIA_INFO, PhotoStreamUtilsMediaInfo))
#define PHOTO_STREAM_UTILS_MEDIA_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_MEDIA_INFO, PhotoStreamUtilsMediaInfoClass))
#define PHOTO_STREAM_UTILS_IS_MEDIA_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_MEDIA_INFO))
#define PHOTO_STREAM_UTILS_IS_MEDIA_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_MEDIA_INFO))
#define PHOTO_STREAM_UTILS_MEDIA_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_MEDIA_INFO, PhotoStreamUtilsMediaInfoClass))

typedef struct _PhotoStreamUtilsMediaInfo PhotoStreamUtilsMediaInfo;
typedef struct _PhotoStreamUtilsMediaInfoClass PhotoStreamUtilsMediaInfoClass;

#define PHOTO_STREAM_UTILS_TYPE_USER (photo_stream_utils_user_get_type ())
#define PHOTO_STREAM_UTILS_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_USER, PhotoStreamUtilsUser))
#define PHOTO_STREAM_UTILS_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_USER, PhotoStreamUtilsUserClass))
#define PHOTO_STREAM_UTILS_IS_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_USER))
#define PHOTO_STREAM_UTILS_IS_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_USER))
#define PHOTO_STREAM_UTILS_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_USER, PhotoStreamUtilsUserClass))

typedef struct _PhotoStreamUtilsUser PhotoStreamUtilsUser;
typedef struct _PhotoStreamUtilsUserClass PhotoStreamUtilsUserClass;

#define PHOTO_STREAM_UTILS_TYPE_LOCATION (photo_stream_utils_location_get_type ())
#define PHOTO_STREAM_UTILS_LOCATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_LOCATION, PhotoStreamUtilsLocation))
#define PHOTO_STREAM_UTILS_LOCATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_LOCATION, PhotoStreamUtilsLocationClass))
#define PHOTO_STREAM_UTILS_IS_LOCATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_LOCATION))
#define PHOTO_STREAM_UTILS_IS_LOCATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_LOCATION))
#define PHOTO_STREAM_UTILS_LOCATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_LOCATION, PhotoStreamUtilsLocationClass))

typedef struct _PhotoStreamUtilsLocation PhotoStreamUtilsLocation;
typedef struct _PhotoStreamUtilsLocationClass PhotoStreamUtilsLocationClass;

#define PHOTO_STREAM_WIDGETS_TYPE_NEWS_BOX (photo_stream_widgets_news_box_get_type ())
#define PHOTO_STREAM_WIDGETS_NEWS_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_NEWS_BOX, PhotoStreamWidgetsNewsBox))
#define PHOTO_STREAM_WIDGETS_NEWS_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_NEWS_BOX, PhotoStreamWidgetsNewsBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_NEWS_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_NEWS_BOX))
#define PHOTO_STREAM_WIDGETS_IS_NEWS_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_NEWS_BOX))
#define PHOTO_STREAM_WIDGETS_NEWS_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_NEWS_BOX, PhotoStreamWidgetsNewsBoxClass))

typedef struct _PhotoStreamWidgetsNewsBox PhotoStreamWidgetsNewsBox;
typedef struct _PhotoStreamWidgetsNewsBoxClass PhotoStreamWidgetsNewsBoxClass;

#define PHOTO_STREAM_UTILS_TYPE_SETTINGS (photo_stream_utils_settings_get_type ())
#define PHOTO_STREAM_UTILS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_SETTINGS, PhotoStreamUtilsSettings))
#define PHOTO_STREAM_UTILS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_SETTINGS, PhotoStreamUtilsSettingsClass))
#define PHOTO_STREAM_UTILS_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_SETTINGS))
#define PHOTO_STREAM_UTILS_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_SETTINGS))
#define PHOTO_STREAM_UTILS_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_SETTINGS, PhotoStreamUtilsSettingsClass))

typedef struct _PhotoStreamUtilsSettings PhotoStreamUtilsSettings;
typedef struct _PhotoStreamUtilsSettingsClass PhotoStreamUtilsSettingsClass;

#define PHOTO_STREAM_UTILS_TYPE_COMMENT (photo_stream_utils_comment_get_type ())
#define PHOTO_STREAM_UTILS_COMMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_COMMENT, PhotoStreamUtilsComment))
#define PHOTO_STREAM_UTILS_COMMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_COMMENT, PhotoStreamUtilsCommentClass))
#define PHOTO_STREAM_UTILS_IS_COMMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_COMMENT))
#define PHOTO_STREAM_UTILS_IS_COMMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_COMMENT))
#define PHOTO_STREAM_UTILS_COMMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_COMMENT, PhotoStreamUtilsCommentClass))

typedef struct _PhotoStreamUtilsComment PhotoStreamUtilsComment;
typedef struct _PhotoStreamUtilsCommentClass PhotoStreamUtilsCommentClass;

#define PHOTO_STREAM_UTILS_TYPE_TAG (photo_stream_utils_tag_get_type ())
#define PHOTO_STREAM_UTILS_TAG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_TAG, PhotoStreamUtilsTag))
#define PHOTO_STREAM_UTILS_TAG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_TAG, PhotoStreamUtilsTagClass))
#define PHOTO_STREAM_UTILS_IS_TAG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_TAG))
#define PHOTO_STREAM_UTILS_IS_TAG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_TAG))
#define PHOTO_STREAM_UTILS_TAG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_TAG, PhotoStreamUtilsTagClass))

typedef struct _PhotoStreamUtilsTag PhotoStreamUtilsTag;
typedef struct _PhotoStreamUtilsTagClass PhotoStreamUtilsTagClass;

#define PHOTO_STREAM_UTILS_TYPE_RELATIONSHIP (photo_stream_utils_relationship_get_type ())
#define PHOTO_STREAM_UTILS_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_RELATIONSHIP, PhotoStreamUtilsRelationship))
#define PHOTO_STREAM_UTILS_RELATIONSHIP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_RELATIONSHIP, PhotoStreamUtilsRelationshipClass))
#define PHOTO_STREAM_UTILS_IS_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_RELATIONSHIP))
#define PHOTO_STREAM_UTILS_IS_RELATIONSHIP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_RELATIONSHIP))
#define PHOTO_STREAM_UTILS_RELATIONSHIP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_RELATIONSHIP, PhotoStreamUtilsRelationshipClass))

typedef struct _PhotoStreamUtilsRelationship PhotoStreamUtilsRelationship;
typedef struct _PhotoStreamUtilsRelationshipClass PhotoStreamUtilsRelationshipClass;

#define PHOTO_STREAM_UTILS_TYPE_NEWS_ACTIVITY (photo_stream_utils_news_activity_get_type ())
#define PHOTO_STREAM_UTILS_NEWS_ACTIVITY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_NEWS_ACTIVITY, PhotoStreamUtilsNewsActivity))
#define PHOTO_STREAM_UTILS_NEWS_ACTIVITY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_NEWS_ACTIVITY, PhotoStreamUtilsNewsActivityClass))
#define PHOTO_STREAM_UTILS_IS_NEWS_ACTIVITY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_NEWS_ACTIVITY))
#define PHOTO_STREAM_UTILS_IS_NEWS_ACTIVITY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_NEWS_ACTIVITY))
#define PHOTO_STREAM_UTILS_NEWS_ACTIVITY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_NEWS_ACTIVITY, PhotoStreamUtilsNewsActivityClass))

typedef struct _PhotoStreamUtilsNewsActivity PhotoStreamUtilsNewsActivity;
typedef struct _PhotoStreamUtilsNewsActivityClass PhotoStreamUtilsNewsActivityClass;
typedef struct _PhotoStreamUtilsMediaInfoPrivate PhotoStreamUtilsMediaInfoPrivate;

#define PHOTO_STREAM_UTILS_TYPE_MEDIA (photo_stream_utils_media_get_type ())
#define PHOTO_STREAM_UTILS_MEDIA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_MEDIA, PhotoStreamUtilsMedia))
#define PHOTO_STREAM_UTILS_MEDIA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_MEDIA, PhotoStreamUtilsMediaClass))
#define PHOTO_STREAM_UTILS_IS_MEDIA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_MEDIA))
#define PHOTO_STREAM_UTILS_IS_MEDIA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_MEDIA))
#define PHOTO_STREAM_UTILS_MEDIA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_MEDIA, PhotoStreamUtilsMediaClass))

typedef struct _PhotoStreamUtilsMedia PhotoStreamUtilsMedia;
typedef struct _PhotoStreamUtilsMediaClass PhotoStreamUtilsMediaClass;

#define PHOTO_STREAM_UTILS_TYPE_TAGGED_USER (photo_stream_utils_tagged_user_get_type ())
#define PHOTO_STREAM_UTILS_TAGGED_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_UTILS_TYPE_TAGGED_USER, PhotoStreamUtilsTaggedUser))
#define PHOTO_STREAM_UTILS_TAGGED_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_UTILS_TYPE_TAGGED_USER, PhotoStreamUtilsTaggedUserClass))
#define PHOTO_STREAM_UTILS_IS_TAGGED_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_UTILS_TYPE_TAGGED_USER))
#define PHOTO_STREAM_UTILS_IS_TAGGED_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_UTILS_TYPE_TAGGED_USER))
#define PHOTO_STREAM_UTILS_TAGGED_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_UTILS_TYPE_TAGGED_USER, PhotoStreamUtilsTaggedUserClass))

typedef struct _PhotoStreamUtilsTaggedUser PhotoStreamUtilsTaggedUser;
typedef struct _PhotoStreamUtilsTaggedUserClass PhotoStreamUtilsTaggedUserClass;
typedef struct _PhotoStreamUtilsCommentPrivate PhotoStreamUtilsCommentPrivate;
typedef struct _PhotoStreamUtilsMediaPrivate PhotoStreamUtilsMediaPrivate;
typedef struct _PhotoStreamUtilsUserPrivate PhotoStreamUtilsUserPrivate;
typedef struct _PhotoStreamUtilsRelationshipPrivate PhotoStreamUtilsRelationshipPrivate;
typedef struct _PhotoStreamUtilsLocationPrivate PhotoStreamUtilsLocationPrivate;
typedef struct _PhotoStreamUtilsTaggedUserPrivate PhotoStreamUtilsTaggedUserPrivate;
typedef struct _PhotoStreamUtilsTagPrivate PhotoStreamUtilsTagPrivate;
typedef struct _PhotoStreamUtilsHistoryEntryPrivate PhotoStreamUtilsHistoryEntryPrivate;
typedef struct _PhotoStreamUtilsSettingsPrivate PhotoStreamUtilsSettingsPrivate;
typedef struct _PhotoStreamUtilsNewsActivityPrivate PhotoStreamUtilsNewsActivityPrivate;
typedef struct _PhotoStreamWidgetsPhotoStackPrivate PhotoStreamWidgetsPhotoStackPrivate;
typedef struct _PhotoStreamWidgetsPostListPrivate PhotoStreamWidgetsPostListPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_POST_BOX (photo_stream_widgets_post_box_get_type ())
#define PHOTO_STREAM_WIDGETS_POST_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_POST_BOX, PhotoStreamWidgetsPostBox))
#define PHOTO_STREAM_WIDGETS_POST_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_POST_BOX, PhotoStreamWidgetsPostBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_POST_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_POST_BOX))
#define PHOTO_STREAM_WIDGETS_IS_POST_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_POST_BOX))
#define PHOTO_STREAM_WIDGETS_POST_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_POST_BOX, PhotoStreamWidgetsPostBoxClass))

typedef struct _PhotoStreamWidgetsPostBox PhotoStreamWidgetsPostBox;
typedef struct _PhotoStreamWidgetsPostBoxClass PhotoStreamWidgetsPostBoxClass;
typedef struct _PhotoStreamWidgetsPostBoxPrivate PhotoStreamWidgetsPostBoxPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_DATE_LABEL (photo_stream_widgets_date_label_get_type ())
#define PHOTO_STREAM_WIDGETS_DATE_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_DATE_LABEL, PhotoStreamWidgetsDateLabel))
#define PHOTO_STREAM_WIDGETS_DATE_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_DATE_LABEL, PhotoStreamWidgetsDateLabelClass))
#define PHOTO_STREAM_WIDGETS_IS_DATE_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_DATE_LABEL))
#define PHOTO_STREAM_WIDGETS_IS_DATE_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_DATE_LABEL))
#define PHOTO_STREAM_WIDGETS_DATE_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_DATE_LABEL, PhotoStreamWidgetsDateLabelClass))

typedef struct _PhotoStreamWidgetsDateLabel PhotoStreamWidgetsDateLabel;
typedef struct _PhotoStreamWidgetsDateLabelClass PhotoStreamWidgetsDateLabelClass;
typedef struct _PhotoStreamWidgetsUserWindowBoxPrivate PhotoStreamWidgetsUserWindowBoxPrivate;
typedef struct _PhotoStreamWidgetsCommentsListPrivate PhotoStreamWidgetsCommentsListPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_COMMENT_BOX (photo_stream_widgets_comment_box_get_type ())
#define PHOTO_STREAM_WIDGETS_COMMENT_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_COMMENT_BOX, PhotoStreamWidgetsCommentBox))
#define PHOTO_STREAM_WIDGETS_COMMENT_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_COMMENT_BOX, PhotoStreamWidgetsCommentBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_COMMENT_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_COMMENT_BOX))
#define PHOTO_STREAM_WIDGETS_IS_COMMENT_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_COMMENT_BOX))
#define PHOTO_STREAM_WIDGETS_COMMENT_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_COMMENT_BOX, PhotoStreamWidgetsCommentBoxClass))

typedef struct _PhotoStreamWidgetsCommentBox PhotoStreamWidgetsCommentBox;
typedef struct _PhotoStreamWidgetsCommentBoxClass PhotoStreamWidgetsCommentBoxClass;
typedef struct _PhotoStreamWidgetsCommentBoxPrivate PhotoStreamWidgetsCommentBoxPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_LIST (photo_stream_widgets_hash_tag_list_get_type ())
#define PHOTO_STREAM_WIDGETS_HASH_TAG_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_LIST, PhotoStreamWidgetsHashTagList))
#define PHOTO_STREAM_WIDGETS_HASH_TAG_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_LIST, PhotoStreamWidgetsHashTagListClass))
#define PHOTO_STREAM_WIDGETS_IS_HASH_TAG_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_LIST))
#define PHOTO_STREAM_WIDGETS_IS_HASH_TAG_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_LIST))
#define PHOTO_STREAM_WIDGETS_HASH_TAG_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_LIST, PhotoStreamWidgetsHashTagListClass))

typedef struct _PhotoStreamWidgetsHashTagList PhotoStreamWidgetsHashTagList;
typedef struct _PhotoStreamWidgetsHashTagListClass PhotoStreamWidgetsHashTagListClass;
typedef struct _PhotoStreamWidgetsHashTagListPrivate PhotoStreamWidgetsHashTagListPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_BOX (photo_stream_widgets_hash_tag_box_get_type ())
#define PHOTO_STREAM_WIDGETS_HASH_TAG_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_BOX, PhotoStreamWidgetsHashTagBox))
#define PHOTO_STREAM_WIDGETS_HASH_TAG_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_BOX, PhotoStreamWidgetsHashTagBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_HASH_TAG_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_BOX))
#define PHOTO_STREAM_WIDGETS_IS_HASH_TAG_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_BOX))
#define PHOTO_STREAM_WIDGETS_HASH_TAG_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_HASH_TAG_BOX, PhotoStreamWidgetsHashTagBoxClass))

typedef struct _PhotoStreamWidgetsHashTagBox PhotoStreamWidgetsHashTagBox;
typedef struct _PhotoStreamWidgetsHashTagBoxClass PhotoStreamWidgetsHashTagBoxClass;
typedef struct _PhotoStreamWidgetsHashTagBoxPrivate PhotoStreamWidgetsHashTagBoxPrivate;
typedef struct _PhotoStreamWidgetsUserListPrivate PhotoStreamWidgetsUserListPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_USER_BOX (photo_stream_widgets_user_box_get_type ())
#define PHOTO_STREAM_WIDGETS_USER_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_BOX, PhotoStreamWidgetsUserBox))
#define PHOTO_STREAM_WIDGETS_USER_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_USER_BOX, PhotoStreamWidgetsUserBoxClass))
#define PHOTO_STREAM_WIDGETS_IS_USER_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_BOX))
#define PHOTO_STREAM_WIDGETS_IS_USER_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_USER_BOX))
#define PHOTO_STREAM_WIDGETS_USER_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_USER_BOX, PhotoStreamWidgetsUserBoxClass))

typedef struct _PhotoStreamWidgetsUserBox PhotoStreamWidgetsUserBox;
typedef struct _PhotoStreamWidgetsUserBoxClass PhotoStreamWidgetsUserBoxClass;
typedef struct _PhotoStreamWidgetsUserBoxPrivate PhotoStreamWidgetsUserBoxPrivate;
typedef struct _PhotoStreamWidgetsHashTagFeedBoxPrivate PhotoStreamWidgetsHashTagFeedBoxPrivate;
typedef struct _PhotoStreamWidgetsLocationFeedBoxPrivate PhotoStreamWidgetsLocationFeedBoxPrivate;
typedef struct _PhotoStreamWidgetsNewsListPrivate PhotoStreamWidgetsNewsListPrivate;
typedef struct _PhotoStreamWidgetsNewsBoxPrivate PhotoStreamWidgetsNewsBoxPrivate;
typedef struct _PhotoStreamWidgetsSearchWindowBoxPrivate PhotoStreamWidgetsSearchWindowBoxPrivate;

#define PHOTO_STREAM_TYPE_LOCATION_MAP_WINDOW (photo_stream_location_map_window_get_type ())
#define PHOTO_STREAM_LOCATION_MAP_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_TYPE_LOCATION_MAP_WINDOW, PhotoStreamLocationMapWindow))
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_TYPE_LOCATION_MAP_WINDOW, PhotoStreamLocationMapWindowClass))
#define PHOTO_STREAM_IS_LOCATION_MAP_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_TYPE_LOCATION_MAP_WINDOW))
#define PHOTO_STREAM_IS_LOCATION_MAP_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_TYPE_LOCATION_MAP_WINDOW))
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_TYPE_LOCATION_MAP_WINDOW, PhotoStreamLocationMapWindowClass))

typedef struct _PhotoStreamLocationMapWindow PhotoStreamLocationMapWindow;
typedef struct _PhotoStreamLocationMapWindowClass PhotoStreamLocationMapWindowClass;
typedef struct _PhotoStreamWidgetsDateLabelPrivate PhotoStreamWidgetsDateLabelPrivate;
typedef struct _PhotoStreamLocationMapWindowPrivate PhotoStreamLocationMapWindowPrivate;

#define PHOTO_STREAM_WIDGETS_TYPE_MEDIA_WINDOW (photo_stream_widgets_media_window_get_type ())
#define PHOTO_STREAM_WIDGETS_MEDIA_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_WIDGETS_TYPE_MEDIA_WINDOW, PhotoStreamWidgetsMediaWindow))
#define PHOTO_STREAM_WIDGETS_MEDIA_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_WIDGETS_TYPE_MEDIA_WINDOW, PhotoStreamWidgetsMediaWindowClass))
#define PHOTO_STREAM_WIDGETS_IS_MEDIA_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_WIDGETS_TYPE_MEDIA_WINDOW))
#define PHOTO_STREAM_WIDGETS_IS_MEDIA_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_WIDGETS_TYPE_MEDIA_WINDOW))
#define PHOTO_STREAM_WIDGETS_MEDIA_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_WIDGETS_TYPE_MEDIA_WINDOW, PhotoStreamWidgetsMediaWindowClass))

typedef struct _PhotoStreamWidgetsMediaWindow PhotoStreamWidgetsMediaWindow;
typedef struct _PhotoStreamWidgetsMediaWindowClass PhotoStreamWidgetsMediaWindowClass;
typedef struct _PhotoStreamWidgetsMediaWindowPrivate PhotoStreamWidgetsMediaWindowPrivate;
typedef struct _PhotoStreamMainWindowPrivate PhotoStreamMainWindowPrivate;
typedef struct _PhotoStreamLoginWindowPrivate PhotoStreamLoginWindowPrivate;
typedef struct _PhotoStreamSettingsWindowPrivate PhotoStreamSettingsWindowPrivate;

#define PHOTO_STREAM_TYPE_BULK_DOWNLOAD_WINDOW (photo_stream_bulk_download_window_get_type ())
#define PHOTO_STREAM_BULK_DOWNLOAD_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PHOTO_STREAM_TYPE_BULK_DOWNLOAD_WINDOW, PhotoStreamBulkDownloadWindow))
#define PHOTO_STREAM_BULK_DOWNLOAD_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PHOTO_STREAM_TYPE_BULK_DOWNLOAD_WINDOW, PhotoStreamBulkDownloadWindowClass))
#define PHOTO_STREAM_IS_BULK_DOWNLOAD_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PHOTO_STREAM_TYPE_BULK_DOWNLOAD_WINDOW))
#define PHOTO_STREAM_IS_BULK_DOWNLOAD_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PHOTO_STREAM_TYPE_BULK_DOWNLOAD_WINDOW))
#define PHOTO_STREAM_BULK_DOWNLOAD_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PHOTO_STREAM_TYPE_BULK_DOWNLOAD_WINDOW, PhotoStreamBulkDownloadWindowClass))

typedef struct _PhotoStreamBulkDownloadWindow PhotoStreamBulkDownloadWindow;
typedef struct _PhotoStreamBulkDownloadWindowClass PhotoStreamBulkDownloadWindowClass;
typedef struct _PhotoStreamBulkDownloadWindowPrivate PhotoStreamBulkDownloadWindowPrivate;

struct _PhotoStreamApp {
	GraniteApplication parent_instance;
	PhotoStreamAppPrivate * priv;
	PhotoStreamMainWindow* mainWindow;
	PhotoStreamLoginWindow* loginWindow;
	PhotoStreamSettingsWindow* settingsWindow;
	gboolean isFeedLoaded;
	GtkHeaderBar* header;
	GtkToolButton* backButton;
	GtkMenuButton* settingsButton;
	GtkMenu* menu;
	GtkMenuItem* settingsMenuItem;
	GtkMenuItem* aboutMenuItem;
	GtkMenuItem* quitMenuItem;
	GtkToggleToolButton* feedButton;
	GtkToggleToolButton* searchButton;
	GtkToggleToolButton* photoButton;
	GtkToggleToolButton* newsButton;
	GtkToggleToolButton* userButton;
	GtkInfoBar* bar;
	GtkBox* box;
	GtkSpinner* loadingSpinner;
	PhotoStreamWidgetsPhotoStack* stack;
	PhotoStreamWidgetsUserWindowBox* userWindowBox;
	PhotoStreamWidgetsHashTagFeedBox* tagFeedBox;
	PhotoStreamWidgetsLocationFeedBox* locationFeedBox;
	PhotoStreamWidgetsSearchWindowBox* searchWindowBox;
	PhotoStreamWidgetsPostList* feedList;
	PhotoStreamWidgetsPostList* postList;
	PhotoStreamWidgetsCommentsList* commentsList;
	PhotoStreamWidgetsUserList* userList;
	PhotoStreamWidgetsNewsList* newsList;
	GeeHashMap* isPageLoaded;
	gint REFRESH_INTERVAL;
	GList* history;
};

struct _PhotoStreamAppClass {
	GraniteApplicationClass parent_class;
};

struct _PhotoStreamUtilsMediaInfo {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsMediaInfoPrivate * priv;
	gint type;
	GList* tags;
	gint64 commentsCount;
	GList* comments;
	gchar* filter;
	GDateTime* creationTime;
	PhotoStreamUtilsLocation* location;
	gchar* link;
	GList* likes;
	gint64 likesCount;
	PhotoStreamUtilsMedia* media;
	GList* taggedUsers;
	gchar* title;
	PhotoStreamUtilsUser* postedUser;
	gchar* id;
	gboolean didILikeThis;
};

struct _PhotoStreamUtilsMediaInfoClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsMediaInfo *self);
};

struct _PhotoStreamUtilsComment {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsCommentPrivate * priv;
	GDateTime* creationTime;
	gchar* text;
	PhotoStreamUtilsUser* user;
	gchar* id;
};

struct _PhotoStreamUtilsCommentClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsComment *self);
};

struct _PhotoStreamUtilsMedia {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsMediaPrivate * priv;
	gchar* url;
	gint64 width;
	gint64 height;
	gchar* previewUrl;
};

struct _PhotoStreamUtilsMediaClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsMedia *self);
};

struct _PhotoStreamUtilsUser {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsUserPrivate * priv;
	gchar* username;
	gchar* profilePicture;
	gchar* fullName;
	gchar* id;
	gchar* website;
	gchar* bio;
	gint64 mediaCount;
	gint64 followers;
	gint64 followed;
	PhotoStreamUtilsRelationship* relationship;
};

struct _PhotoStreamUtilsUserClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsUser *self);
};

struct _PhotoStreamUtilsRelationship {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsRelationshipPrivate * priv;
	gchar* incoming;
	gchar* outcoming;
};

struct _PhotoStreamUtilsRelationshipClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsRelationship *self);
};

struct _PhotoStreamUtilsLocation {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsLocationPrivate * priv;
	gdouble latitude;
	gdouble longitude;
	gchar* id;
	gchar* name;
};

struct _PhotoStreamUtilsLocationClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsLocation *self);
};

struct _PhotoStreamUtilsTaggedUser {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsTaggedUserPrivate * priv;
	gdouble x;
	gdouble y;
	PhotoStreamUtilsUser* user;
};

struct _PhotoStreamUtilsTaggedUserClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsTaggedUser *self);
};

struct _PhotoStreamUtilsTag {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsTagPrivate * priv;
	gchar* tag;
	gint64 mediaCount;
};

struct _PhotoStreamUtilsTagClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsTag *self);
};

struct _PhotoStreamUtilsHistoryEntry {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsHistoryEntryPrivate * priv;
	gchar* type;
	gchar* id;
};

struct _PhotoStreamUtilsHistoryEntryClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsHistoryEntry *self);
};

struct _PhotoStreamUtilsSettings {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsSettingsPrivate * priv;
	gchar* email;
	gchar* phoneNumber;
	gchar* sex;
	gboolean recommend;
};

struct _PhotoStreamUtilsSettingsClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsSettings *self);
};

struct _PhotoStreamUtilsNewsActivity {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PhotoStreamUtilsNewsActivityPrivate * priv;
	gchar* username;
	gchar* userProfilePicture;
	gchar* imagePicture;
	gchar* activityType;
	gchar* postId;
	GDateTime* time;
	gchar* comment;
};

struct _PhotoStreamUtilsNewsActivityClass {
	GTypeClass parent_class;
	void (*finalize) (PhotoStreamUtilsNewsActivity *self);
};

struct _PhotoStreamWidgetsPhotoStack {
	GtkStack parent_instance;
	PhotoStreamWidgetsPhotoStackPrivate * priv;
};

struct _PhotoStreamWidgetsPhotoStackClass {
	GtkStackClass parent_class;
};

struct _PhotoStreamWidgetsPostList {
	GtkBox parent_instance;
	PhotoStreamWidgetsPostListPrivate * priv;
	GList* boxes;
	GList* srcImages;
	GtkButton* moreButton;
	GtkAlignment* moreButtonAlignment;
	GtkButton* moreButtonImages;
	GtkAlignment* moreButtonImagesAlignment;
	gchar* olderFeedLink;
	gint IMAGE_SIZE;
	GtkScrolledWindow* postsWindow;
	GtkScrolledWindow* imagesWindow;
	GtkStack* stack;
	GtkListBox* postList;
	GtkBox* imagesBox;
	GtkGrid* imagesGrid;
};

struct _PhotoStreamWidgetsPostListClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsPostBox {
	GtkEventBox parent_instance;
	PhotoStreamWidgetsPostBoxPrivate * priv;
	GtkBox* box;
	GtkAlignment* avatarAlignment;
	GtkAlignment* userNameAlignment;
	GtkAlignment* dateAlignment;
	GtkAlignment* imageAlignment;
	GtkAlignment* titleAlignment;
	GtkAlignment* locationAlignment;
	GtkAlignment* likeAlignment;
	GtkAlignment* commentsAlignment;
	GdkPixbuf* likePixbuf;
	GdkPixbuf* dislikePixbuf;
	GtkBox* userToolbar;
	GtkLabel* userNameLabel;
	PhotoStreamWidgetsDateLabel* dateLabel;
	GtkLabel* titleLabel;
	GtkLabel* likesLabel;
	GtkImage* avatar;
	GtkEventBox* avatarBox;
	GtkEventBox* imageEventBox;
	GtkFixed* imageBox;
	GtkImage* image;
	GtkBox* likeToolbar;
	GtkEventBox* likeBox;
	GList* usersOnPhoto;
	GtkImage* likeImage;
	GtkEventBox* locationEventBox;
	GtkBox* locationBox;
	GtkImage* locationImage;
	GtkLabel* locationLabel;
	GdkPixbuf* locationPixbuf;
	gchar* likesText;
	gboolean windowOpened;
	PhotoStreamWidgetsCommentsList* commentList;
	PhotoStreamUtilsMediaInfo* post;
};

struct _PhotoStreamWidgetsPostBoxClass {
	GtkEventBoxClass parent_class;
};

struct _PhotoStreamWidgetsUserWindowBox {
	GtkBox parent_instance;
	PhotoStreamWidgetsUserWindowBoxPrivate * priv;
	GtkBox* box;
	GtkViewport* viewport;
	GtkAlignment* avatarAlignment;
	GtkEventBox* userInfoEventBox;
	GtkBox* userInfoBox;
	GtkBox* avatarBox;
	GdkPixbuf* avatarPixbuf;
	GtkImage* avatar;
	GtkLabel* userName;
	GtkAlignment* relationshipAlignment;
	GtkEventBox* relationshipBox;
	GtkImage* relationshipImage;
	GdkPixbuf* followingPixbuf;
	GdkPixbuf* notFollowingPixbuf;
	GdkPixbuf* unfollowPixbuf;
	GdkPixbuf* followPixbuf;
	GdkPixbuf* requestedPixbuf;
	GtkBox* userCountsBox;
	GtkBox* mediaCountBox;
	GtkBox* followsCountBox;
	GtkBox* followersCountBox;
	GtkAlignment* mediaCountBoxAlignment;
	GtkAlignment* followsCountBoxAlignment;
	GtkAlignment* followersCountBoxAlignment;
	GtkLabel* mediaCount;
	GtkLabel* followsCount;
	GtkLabel* followersCount;
	GtkLabel* mediaCountText;
	GtkLabel* followsCountText;
	GtkLabel* followersCountText;
	GtkEventBox* followsCountEventBox;
	GtkEventBox* followersCountEventBox;
	GtkScrolledWindow* feedWindow;
	PhotoStreamWidgetsPostList* userFeed;
	GtkBox* errorBox;
	GtkLabel* privateLabel;
	gboolean isPrivate;
	PhotoStreamUtilsUser* user;
};

struct _PhotoStreamWidgetsUserWindowBoxClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsCommentsList {
	GtkListBox parent_instance;
	PhotoStreamWidgetsCommentsListPrivate * priv;
	GList* comments;
	GtkLinkButton* loadMoreButton;
	GtkBox* moreBox;
	gchar* postId;
	GtkEntry* commentBox;
	GtkAlignment* commentsBoxAlignment;
	gint commentsPosted;
	gboolean loadAvatars;
};

struct _PhotoStreamWidgetsCommentsListClass {
	GtkListBoxClass parent_class;
};

struct _PhotoStreamWidgetsCommentBox {
	GtkBox parent_instance;
	PhotoStreamWidgetsCommentBoxPrivate * priv;
	PhotoStreamUtilsComment* comment;
	GtkAlignment* avatarAlignment;
	GtkAlignment* textAlignment;
	GtkBox* textBox;
	GtkLabel* textLabel;
	GtkEventBox* avatarBox;
	GtkEventBox* textEventBox;
	GtkImage* avatar;
	GtkToolButton* removeCommentButton;
	gint AVATAR_SIZE;
};

struct _PhotoStreamWidgetsCommentBoxClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsHashTagList {
	GtkListBox parent_instance;
	PhotoStreamWidgetsHashTagListPrivate * priv;
	GList* boxes;
	GtkButton* moreButton;
	gchar* olderFeedLink;
};

struct _PhotoStreamWidgetsHashTagListClass {
	GtkListBoxClass parent_class;
};

struct _PhotoStreamWidgetsHashTagBox {
	GtkEventBox parent_instance;
	PhotoStreamWidgetsHashTagBoxPrivate * priv;
	GtkBox* box;
	GtkAlignment* hashtagNameAlignment;
	GtkAlignment* mediaCountAlignment;
	GtkLabel* hashtagNameLabel;
	GtkLabel* mediaCountLabel;
	PhotoStreamUtilsTag* tag;
};

struct _PhotoStreamWidgetsHashTagBoxClass {
	GtkEventBoxClass parent_class;
};

struct _PhotoStreamWidgetsUserList {
	GtkListBox parent_instance;
	PhotoStreamWidgetsUserListPrivate * priv;
	GList* boxes;
	GtkButton* moreButton;
	gchar* olderUsersLink;
};

struct _PhotoStreamWidgetsUserListClass {
	GtkListBoxClass parent_class;
};

struct _PhotoStreamWidgetsUserBox {
	GtkEventBox parent_instance;
	PhotoStreamWidgetsUserBoxPrivate * priv;
	GtkBox* box;
	GtkBox* userToolbar;
	GtkLabel* userNameLabel;
	GtkLabel* titleLabel;
	GtkImage* avatarImage;
	GtkEventBox* avatarBox;
	GtkAlignment* relationshipAlignment;
	GtkEventBox* relationshipBox;
	GtkImage* relationshipImage;
	GdkPixbuf* followingPixbuf;
	GdkPixbuf* notFollowingPixbuf;
	GdkPixbuf* unfollowPixbuf;
	GdkPixbuf* followPixbuf;
	GdkPixbuf* requestedPixbuf;
	PhotoStreamWidgetsCommentsList* commentList;
	PhotoStreamUtilsUser* user;
};

struct _PhotoStreamWidgetsUserBoxClass {
	GtkEventBoxClass parent_class;
};

struct _PhotoStreamWidgetsHashTagFeedBox {
	GtkBox parent_instance;
	PhotoStreamWidgetsHashTagFeedBoxPrivate * priv;
	GtkLabel* hashtagTitleLabel;
	PhotoStreamWidgetsPostList* hashtagFeed;
	GtkAlignment* hashtagTitleAlignment;
	PhotoStreamUtilsTag* tag;
};

struct _PhotoStreamWidgetsHashTagFeedBoxClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsLocationFeedBox {
	GtkBox parent_instance;
	PhotoStreamWidgetsLocationFeedBoxPrivate * priv;
	GtkBox* locationInfoBox;
	GtkLabel* locationTitleLabel;
	GtkImage* locationImage;
	PhotoStreamWidgetsPostList* locationFeed;
	GtkAlignment* locationTitleAlignment;
	GtkAlignment* locationImageAlignment;
	GtkButton* openInMapsButton;
	GtkAlignment* openInMapsAlignment;
	gboolean locationHasCoords;
	PhotoStreamUtilsLocation* location;
};

struct _PhotoStreamWidgetsLocationFeedBoxClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsNewsList {
	GtkBox parent_instance;
	PhotoStreamWidgetsNewsListPrivate * priv;
	GList* boxes;
	GtkListBox* newsList;
	GtkScrolledWindow* newsWindow;
};

struct _PhotoStreamWidgetsNewsListClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsNewsBox {
	GtkEventBox parent_instance;
	PhotoStreamWidgetsNewsBoxPrivate * priv;
	GtkBox* box;
	GtkImage* avatarImage;
	GtkImage* postImage;
	GtkBox* textBox;
	GtkLabel* commentLabel;
	PhotoStreamWidgetsDateLabel* dateLabel;
	GtkEventBox* avatarBox;
	GtkEventBox* postImageBox;
	GtkAlignment* avatarAlignment;
	GtkAlignment* commentAlignment;
	GtkAlignment* dateAlignment;
	GtkAlignment* postImageAlignment;
	gint AVATAR_SIZE;
	PhotoStreamUtilsNewsActivity* activity;
};

struct _PhotoStreamWidgetsNewsBoxClass {
	GtkEventBoxClass parent_class;
};

struct _PhotoStreamWidgetsSearchWindowBox {
	GtkBox parent_instance;
	PhotoStreamWidgetsSearchWindowBoxPrivate * priv;
	GtkEntry* searchQuery;
	GtkStack* stack;
	GtkStackSwitcher* stackSwitcher;
	GtkBox* switcherBox;
	GtkButton* locationButton;
	GtkRadioButton* tagsRadio;
	GtkRadioButton* usersRadio;
	GtkRadioButton* locationsRadio;
	GtkScrolledWindow* tagsWindow;
	GtkScrolledWindow* usersWindow;
	GtkScrolledWindow* locationWindow;
	GtkSpinner* spinner;
	GtkBox* radioBox;
	PhotoStreamWidgetsHashTagList* tagList;
	PhotoStreamWidgetsUserList* userList;
	PhotoStreamLocationMapWindow* locationMapWindow;
	gchar* currentWindow;
	gchar* tagsRequest;
	gchar* usersRequest;
	gboolean isInitialized;
};

struct _PhotoStreamWidgetsSearchWindowBoxClass {
	GtkBoxClass parent_class;
};

struct _PhotoStreamWidgetsDateLabel {
	GtkEventBox parent_instance;
	PhotoStreamWidgetsDateLabelPrivate * priv;
	GtkLabel* dateLabel;
	GDateTime* time;
};

struct _PhotoStreamWidgetsDateLabelClass {
	GtkEventBoxClass parent_class;
};

struct _PhotoStreamLocationMapWindow {
	GtkWindow parent_instance;
	PhotoStreamLocationMapWindowPrivate * priv;
	GtkBox* scaleBox;
	GtkLabel* distanceLabel;
	GtkScale* scale;
	GtkButton* searchButton;
	PhotoStreamUtilsLocation* location;
	GList* locationList;
	gchar* prevTitle;
};

struct _PhotoStreamLocationMapWindowClass {
	GtkWindowClass parent_class;
};

struct _PhotoStreamWidgetsMediaWindow {
	GtkWindow parent_instance;
	PhotoStreamWidgetsMediaWindowPrivate * priv;
	GtkBox* windowBox;
	GtkImage* image;
	GtkEventBox* eventBox;
	GtkDrawingArea* drawingArea;
	GstPipeline* pipeline;
	GstElement* src;
	GstElement* videoSink;
	GstElement* audioSink;
	GstElement* decode;
	GstElement* videoConvert;
	GstElement* audioConvert;
	gboolean video;
	gboolean videoPlaying;
	gboolean finishedPlaying;
};

struct _PhotoStreamWidgetsMediaWindowClass {
	GtkWindowClass parent_class;
};

struct _PhotoStreamMainWindow {
	GtkApplicationWindow parent_instance;
	PhotoStreamMainWindowPrivate * priv;
};

struct _PhotoStreamMainWindowClass {
	GtkApplicationWindowClass parent_class;
};

struct _PhotoStreamLoginWindow {
	GtkApplicationWindow parent_instance;
	PhotoStreamLoginWindowPrivate * priv;
	GtkSpinner* spinner;
	GtkBox* box;
	GtkScrolledWindow* scrolledWindow;
};

struct _PhotoStreamLoginWindowClass {
	GtkApplicationWindowClass parent_class;
};

struct _PhotoStreamSettingsWindow {
	GtkApplicationWindow parent_instance;
	PhotoStreamSettingsWindowPrivate * priv;
	GraniteWidgetsThinPaned* pane;
	GraniteWidgetsSourceList* sourceList;
	GraniteWidgetsSourceListItem* editProfileItem;
	GraniteWidgetsSourceListItem* changePasswordItem;
	GraniteWidgetsSourceListItem* manageAppsItem;
	GraniteWidgetsSourceListItem* appSettingsItem;
	GraniteWidgetsSourceListItem* logOutItem;
	GtkSpinner* spinner;
	GtkStack* settingsStack;
	GtkBox* editProfileBox;
	GtkGrid* settingsGrid;
	GtkLabel* fullNameLabel;
	GtkLabel* emailLabel;
	GtkLabel* usernameLabel;
	GtkLabel* phoneNumberLabel;
	GtkLabel* sexLabel;
	GtkLabel* aboutLabel;
	GtkLabel* websiteLabel;
	GtkLabel* recommendLabel;
	GtkAlignment* fullNameLabelAlignment;
	GtkAlignment* emailLabelAlignment;
	GtkAlignment* usernameLabelAlignment;
	GtkAlignment* phoneNumberLabelAlignment;
	GtkAlignment* sexLabelAlignment;
	GtkAlignment* aboutLabelAlignment;
	GtkAlignment* websiteLabelAlignment;
	GtkAlignment* recommendLabelAlignment;
	GtkEntry* fullName;
	GtkEntry* email;
	GtkEntry* username;
	GtkEntry* phoneNumber;
	GtkComboBox* sex;
	GtkTextView* about;
	GtkEntry* website;
	GtkCheckButton* recommend;
	GtkButton* sumbitSettingsButton;
	GtkAlignment* fullNameAlignment;
	GtkAlignment* emailAlignment;
	GtkAlignment* usernameAlignment;
	GtkAlignment* phoneNumberAlignment;
	GtkAlignment* sexAlignment;
	GtkAlignment* aboutAlignment;
	GtkAlignment* websiteAlignment;
	GtkAlignment* recommendAlignment;
	GtkBox* appSettingsBox;
	GtkLabel* cacheSpaceLabel;
	GtkButton* clearCacheButton;
	GtkBox* postsDisplayTypeBox;
	GtkLabel* postsOrImagesLabel;
	GtkBox* postsOrImagesBox;
	GtkRadioButton* postsRadioButton;
	GtkRadioButton* imagesRadioButton;
	GtkAlignment* cacheSpaceLabelAlignment;
	GtkAlignment* clearCacheButtonAlignment;
	GtkAlignment* postsDisplayTypeBoxAlignment;
};

struct _PhotoStreamSettingsWindowClass {
	GtkApplicationWindowClass parent_class;
};

struct _PhotoStreamBulkDownloadWindow {
	GtkWindow parent_instance;
	PhotoStreamBulkDownloadWindowPrivate * priv;
	GtkBox* box;
	GtkLabel* statusLabel;
	GtkProgressBar* progressBar;
	GtkGrid* settingsGrid;
	GtkLabel* saveFolderLabel;
	GtkEntry* saveFolderEntry;
	GtkButton* saveFolderButton;
	GtkCheckButton* useSavePattern;
	GtkEntry* savePatternEntry;
	GtkLabel* postsTypeLabel;
	GtkBox* radioBox;
	GtkRadioButton* allPosts;
	GtkRadioButton* onlyImages;
	GtkRadioButton* onlyVideos;
	GtkLabel* patternExplanation;
	GtkButton* downloadPostsButton;
	GtkAlignment* gridAlignment;
	GtkAlignment* statusAlignment;
	GtkAlignment* progressBarAlignment;
	gchar* id;
};

struct _PhotoStreamBulkDownloadWindowClass {
	GtkWindowClass parent_class;
};


GType photo_stream_app_get_type (void) G_GNUC_CONST;
GType photo_stream_main_window_get_type (void) G_GNUC_CONST;
GType photo_stream_login_window_get_type (void) G_GNUC_CONST;
GType photo_stream_settings_window_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_photo_stack_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_user_window_box_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_hash_tag_feed_box_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_location_feed_box_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_search_window_box_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_post_list_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_comments_list_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_user_list_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_news_list_get_type (void) G_GNUC_CONST;
gpointer photo_stream_utils_history_entry_ref (gpointer instance);
void photo_stream_utils_history_entry_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_history_entry (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_history_entry (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_history_entry (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_history_entry (const GValue* value);
GType photo_stream_utils_history_entry_get_type (void) G_GNUC_CONST;
extern gchar* photo_stream_app_appToken;
extern gchar* photo_stream_app_CACHE_URL;
extern gchar* photo_stream_app_CACHE_AVATARS;
extern gchar* photo_stream_app_CACHE_HTML;
gpointer photo_stream_utils_media_info_ref (gpointer instance);
void photo_stream_utils_media_info_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_media_info (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_media_info (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_media_info (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_media_info (const GValue* value);
GType photo_stream_utils_media_info_get_type (void) G_GNUC_CONST;
extern GList* photo_stream_app_feedPosts;
extern gboolean photo_stream_app_isMainWindowShown;
gpointer photo_stream_utils_user_ref (gpointer instance);
void photo_stream_utils_user_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_user (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_user (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_user (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_user (const GValue* value);
GType photo_stream_utils_user_get_type (void) G_GNUC_CONST;
extern PhotoStreamUtilsUser* photo_stream_app_selfUser;
#define PHOTO_STREAM_APP_REDIRECT_URI "http://www.google.com/photostream"
#define PHOTO_STREAM_APP_CLIENT_ID "e139a947d6de45a88297366282c27137"
#define PHOTO_STREAM_APP_CLIENT_SECRET "4b54aac105534413b6885c2c48bcaa66"
#define PHOTO_STREAM_APP_SCHEMA_URI "tk.itprogramming1.photostream"
#define PHOTO_STREAM_APP_SCHEMA_TOKEN "token"
#define PHOTO_STREAM_APP_SCHEMA_LAST_CHECKED "last-news-checked"
#define PHOTO_STREAM_APP_SCHEMA_REFRESH_INTERVAL "refresh-interval"
#define PHOTO_STREAM_APP_SCHEMA_INSTAGRAM_IP "instagram-api-ip"
#define PHOTO_STREAM_APP_SCHEMA_POSTS_OR_IMAGES "posts-or-images"
#define PHOTO_STREAM_APP_CACHE_IMAGES "/usr/share/photostream/images/"
PhotoStreamApp* photo_stream_app_new (void);
PhotoStreamApp* photo_stream_app_construct (GType object_type);
void photo_stream_app_tryLogin (PhotoStreamApp* self);
void photo_stream_app_stubLoading (PhotoStreamApp* self);
void photo_stream_app_preloadWindows (PhotoStreamApp* self);
void photo_stream_app_setLoginWindow (PhotoStreamApp* self);
void photo_stream_app_setSettingsWindow (PhotoStreamApp* self);
gboolean photo_stream_app_handleUris (PhotoStreamApp* self, const gchar* uri);
gint photo_stream_app_loadUserFromUsername (PhotoStreamApp* self, const gchar* username);
gint photo_stream_app_loadTag (PhotoStreamApp* self, const gchar* tagName);
void photo_stream_app_loadOlderTagFeed (PhotoStreamApp* self);
gint photo_stream_app_loadPost (PhotoStreamApp* self, const gchar* id);
gpointer photo_stream_utils_location_ref (gpointer instance);
void photo_stream_utils_location_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_location (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_location (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_location (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_location (const GValue* value);
GType photo_stream_utils_location_get_type (void) G_GNUC_CONST;
gint photo_stream_app_openLocationMap (PhotoStreamApp* self, PhotoStreamUtilsLocation* location);
gint photo_stream_app_loadLocation (PhotoStreamApp* self, const gchar* locationId);
void photo_stream_app_loadOlderLocationFeed (PhotoStreamApp* self);
gint photo_stream_app_loadComments (PhotoStreamApp* self, const gchar* postId);
gint photo_stream_app_loadUsers (PhotoStreamApp* self, const gchar* postId, const gchar* type);
gint photo_stream_app_loadUser (PhotoStreamApp* self, const gchar* id, PhotoStreamUtilsUser* loadedUser);
gint photo_stream_app_loadOlderUserFeed (PhotoStreamApp* self);
gint photo_stream_app_loadFeed (PhotoStreamApp* self);
void photo_stream_app_loadNews (PhotoStreamApp* self);
void photo_stream_app_refreshFeed (PhotoStreamApp* self);
void photo_stream_app_refreshNews (PhotoStreamApp* self);
void photo_stream_app_loadSelfInfo (PhotoStreamApp* self);
gint photo_stream_app_loadOlderFeed (PhotoStreamApp* self);
void photo_stream_app_setErrorWidgets (PhotoStreamApp* self, const gchar* reason);
void photo_stream_app_setHeader (PhotoStreamApp* self);
void photo_stream_app_setHeaderCallbacks (PhotoStreamApp* self);
void photo_stream_app_uncheckButtonsExcept (PhotoStreamApp* self, const gchar* notUncheck);
gint photo_stream_app_setFeedWidgets (PhotoStreamApp* self);
gint photo_stream_app_loadImages (PhotoStreamApp* self);
GType photo_stream_widgets_news_box_get_type (void) G_GNUC_CONST;
void photo_stream_app_connectNewsBoxHandlers (PhotoStreamApp* self, PhotoStreamWidgetsNewsBox* newsBox);
void photo_stream_app_switchWindow (PhotoStreamApp* self, const gchar* window);
gchar* photo_stream_app_getActiveWindow (PhotoStreamApp* self);
void photo_stream_app_response (PhotoStreamApp* self, gint response_id);
void photo_stream_app_addHistoryEntry (PhotoStreamApp* self, const gchar* type, const gchar* id);
void photo_stream_app_stepBackHistory (PhotoStreamApp* self);
gchar* getResponse (const gchar* host);
gchar* getUserInfo (const gchar* id);
gchar* getUserFeed (const gchar* minId);
gchar* getUserMedia (const gchar* id);
gchar* getLikedPosts (void);
gchar* getOlderUserFeed (const gchar* olderFeedLink);
gchar* searchUsers (const gchar* user);
gchar* getUserFollows (const gchar* user);
gchar* getUserFollowers (const gchar* user);
gchar* getRequestedUsers (void);
gchar* getUsersRelationship (const gchar* user);
gchar* relationshipAction (const gchar* user, const gchar* action);
gchar* getMediaData (const gchar* id);
gchar* mediaSearch (gdouble latitude, gdouble longitude, gint distance);
gchar* getPopular (void);
gchar* getComments (const gchar* id);
gchar* postComment (const gchar* id, const gchar* comment);
gchar* deleteComment (const gchar* mediaId, const gchar* commentId);
gchar* getMediaLikes (const gchar* id);
gchar* likeMedia (const gchar* id);
gchar* dislikeMedia (const gchar* id);
gchar* getTagInfo (const gchar* tag);
gchar* getTagRecent (const gchar* tag);
gchar* searchTags (const gchar* tag);
gchar* getLocationInfo (const gchar* id);
gchar* getLocationRecent (const gchar* id);
gchar* searchLocation (gdouble latitude, gdouble longitude, gint distance);
void downloadFile (const gchar* url, const gchar* filename, GError** error);
gchar* getUserNews (void);
gchar* getUserSettings (void);
gchar* resolveHost (void);
gchar* postPicture (const gchar* fileUrl);
gpointer photo_stream_utils_settings_ref (gpointer instance);
void photo_stream_utils_settings_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_settings (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_settings (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_settings (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_settings (const GValue* value);
GType photo_stream_utils_settings_get_type (void) G_GNUC_CONST;
gchar* postSettings (PhotoStreamUtilsSettings* settings, PhotoStreamUtilsUser* user);
GList* parseFeed (const gchar* message, GError** error);
PhotoStreamUtilsMediaInfo* parseMediaPostFromObject (JsonNode* mediaPost, GError** error);
PhotoStreamUtilsLocation* parseLocationFromObject (JsonObject* locationObject, GError** error);
gpointer photo_stream_utils_comment_ref (gpointer instance);
void photo_stream_utils_comment_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_comment (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_comment (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_comment (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_comment (const GValue* value);
GType photo_stream_utils_comment_get_type (void) G_GNUC_CONST;
GList* parseCommentsFromObject (JsonObject* commentObject, GError** error);
PhotoStreamUtilsComment* parseCommentFromObject (JsonObject* comment, GError** error);
GList* parseComments (const gchar* message, GError** error);
PhotoStreamUtilsComment* parseCommentFromReply (const gchar* message, GError** error);
PhotoStreamUtilsUser* parseUserFromObject (JsonObject* userObject, GError** error);
PhotoStreamUtilsUser* parseUser (const gchar* message, GError** error);
gchar* parseToken (const gchar* responce, GError** error);
PhotoStreamUtilsMediaInfo* parseMediaPost (const gchar* message, GError** error);
void checkErrors (JsonObject* root_object, GError** error);
void tryLoadMessage (JsonParser* parser, const gchar* message, GError** error);
gchar* parsePagination (const gchar* message, GError** error);
GList* parseUserList (const gchar* message, GError** error);
gpointer photo_stream_utils_tag_ref (gpointer instance);
void photo_stream_utils_tag_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_tag (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_tag (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_tag (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_tag (const GValue* value);
GType photo_stream_utils_tag_get_type (void) G_GNUC_CONST;
GList* parseTagList (const gchar* message, GError** error);
PhotoStreamUtilsTag* parseTag (const gchar* message, GError** error);
PhotoStreamUtilsTag* parseTagFromObject (JsonObject* tagObject, GError** error);
PhotoStreamUtilsLocation* parseLocation (const gchar* message, GError** error);
GList* parseLocationList (const gchar* message, GError** error);
gpointer photo_stream_utils_relationship_ref (gpointer instance);
void photo_stream_utils_relationship_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_relationship (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_relationship (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_relationship (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_relationship (const GValue* value);
GType photo_stream_utils_relationship_get_type (void) G_GNUC_CONST;
PhotoStreamUtilsRelationship* parseRelationship (const gchar* message, GError** error);
void parseErrors (const gchar* message, GError** error);
gpointer photo_stream_utils_news_activity_ref (gpointer instance);
void photo_stream_utils_news_activity_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_news_activity (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_news_activity (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_news_activity (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_news_activity (const GValue* value);
GType photo_stream_utils_news_activity_get_type (void) G_GNUC_CONST;
GList* parseNews (const gchar* message);
PhotoStreamUtilsNewsActivity* parseActivity (xmlNode* liElement);
xmlNode* getChildWithId (xmlNode* node, const gchar* id);
xmlNode* getChildWithName (xmlNode* node, const gchar* name);
xmlNode* getChildWithClass (xmlNode* node, const gchar* classNeeded);
xmlNode* getChildWithNameAttr (xmlNode* node, const gchar* name);
PhotoStreamUtilsSettings* parseSettings (const gchar* message);
void printFeed (GList* list);
void printPost (PhotoStreamUtilsMediaInfo* post);
void printLocation (PhotoStreamUtilsLocation* location);
void printComment (PhotoStreamUtilsComment* comment);
void printActivityList (GList* activityList);
void printActivity (PhotoStreamUtilsNewsActivity* activity);
void printHistory (GList* history);
void printHistoryEntry (PhotoStreamUtilsHistoryEntry* entry);
gpointer photo_stream_utils_media_ref (gpointer instance);
void photo_stream_utils_media_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_media (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_media (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_media (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_media (const GValue* value);
GType photo_stream_utils_media_get_type (void) G_GNUC_CONST;
gpointer photo_stream_utils_tagged_user_ref (gpointer instance);
void photo_stream_utils_tagged_user_unref (gpointer instance);
GParamSpec* photo_stream_utils_param_spec_tagged_user (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void photo_stream_utils_value_set_tagged_user (GValue* value, gpointer v_object);
void photo_stream_utils_value_take_tagged_user (GValue* value, gpointer v_object);
gpointer photo_stream_utils_value_get_tagged_user (const GValue* value);
GType photo_stream_utils_tagged_user_get_type (void) G_GNUC_CONST;
PhotoStreamUtilsMediaInfo* photo_stream_utils_media_info_new (void);
PhotoStreamUtilsMediaInfo* photo_stream_utils_media_info_construct (GType object_type);
PhotoStreamUtilsComment* photo_stream_utils_comment_new (void);
PhotoStreamUtilsComment* photo_stream_utils_comment_construct (GType object_type);
PhotoStreamUtilsMedia* photo_stream_utils_media_new (void);
PhotoStreamUtilsMedia* photo_stream_utils_media_construct (GType object_type);
PhotoStreamUtilsUser* photo_stream_utils_user_new (void);
PhotoStreamUtilsUser* photo_stream_utils_user_construct (GType object_type);
PhotoStreamUtilsRelationship* photo_stream_utils_relationship_new (void);
PhotoStreamUtilsRelationship* photo_stream_utils_relationship_construct (GType object_type);
PhotoStreamUtilsLocation* photo_stream_utils_location_new (void);
PhotoStreamUtilsLocation* photo_stream_utils_location_construct (GType object_type);
PhotoStreamUtilsTaggedUser* photo_stream_utils_tagged_user_new (void);
PhotoStreamUtilsTaggedUser* photo_stream_utils_tagged_user_construct (GType object_type);
PhotoStreamUtilsTag* photo_stream_utils_tag_new (void);
PhotoStreamUtilsTag* photo_stream_utils_tag_construct (GType object_type);
PhotoStreamUtilsHistoryEntry* photo_stream_utils_history_entry_new (void);
PhotoStreamUtilsHistoryEntry* photo_stream_utils_history_entry_construct (GType object_type);
PhotoStreamUtilsSettings* photo_stream_utils_settings_new (void);
PhotoStreamUtilsSettings* photo_stream_utils_settings_construct (GType object_type);
PhotoStreamUtilsNewsActivity* photo_stream_utils_news_activity_new (void);
PhotoStreamUtilsNewsActivity* photo_stream_utils_news_activity_construct (GType object_type);
gchar* loadToken (void);
void setToken (const gchar* token);
gchar* loadAddress (void);
void setAddress (const gchar* ip);
gint64 loadDate (void);
gint loadRefreshInterval (void);
void setCurrentDate (void);
gboolean loadPostsOrImages (void);
void setPostsOrImages (gboolean value);
void createSchema (void);
gchar* wrapInTags (const gchar* original);
gchar* getFileName (const gchar* url);
gchar* replaceHostWithIp (const gchar* host, const gchar* ip);
void displayNewsNotifications (GList* activityList);
PhotoStreamWidgetsPhotoStack* photo_stream_widgets_photo_stack_new (void);
PhotoStreamWidgetsPhotoStack* photo_stream_widgets_photo_stack_construct (GType object_type);
GType photo_stream_widgets_post_box_get_type (void) G_GNUC_CONST;
PhotoStreamWidgetsPostList* photo_stream_widgets_post_list_new (gboolean cannotViewImages);
PhotoStreamWidgetsPostList* photo_stream_widgets_post_list_construct (GType object_type, gboolean cannotViewImages);
void photo_stream_widgets_post_list_deleteMoreButton (PhotoStreamWidgetsPostList* self);
gboolean photo_stream_widgets_post_list_contains (PhotoStreamWidgetsPostList* self, PhotoStreamUtilsMediaInfo* post);
void photo_stream_widgets_post_list_append (PhotoStreamWidgetsPostList* self, PhotoStreamUtilsMediaInfo* post);
void photo_stream_widgets_post_list_prepend (PhotoStreamWidgetsPostList* self, PhotoStreamUtilsMediaInfo* post);
void photo_stream_widgets_post_list_resizeAllImages (PhotoStreamWidgetsPostList* self, gint windowSize);
void photo_stream_widgets_post_list_clear (PhotoStreamWidgetsPostList* self);
GType photo_stream_widgets_date_label_get_type (void) G_GNUC_CONST;
#define PHOTO_STREAM_WIDGETS_POST_BOX_AVATAR_SIZE 70
#define PHOTO_STREAM_WIDGETS_POST_BOX_IMAGE_SIZE 400
#define PHOTO_STREAM_WIDGETS_POST_BOX_LIKE_SIZE 20
#define PHOTO_STREAM_WIDGETS_POST_BOX_LOCATION_SIZE 20
PhotoStreamWidgetsPostBox* photo_stream_widgets_post_box_new (PhotoStreamUtilsMediaInfo* post);
PhotoStreamWidgetsPostBox* photo_stream_widgets_post_box_construct (GType object_type, PhotoStreamUtilsMediaInfo* post);
void photo_stream_widgets_post_box_openMedia (PhotoStreamWidgetsPostBox* self);
gint photo_stream_widgets_post_box_switchLike (PhotoStreamWidgetsPostBox* self);
gboolean photo_stream_widgets_post_box_callback (PhotoStreamWidgetsPostBox* self);
void photo_stream_widgets_post_box_loadAvatar (PhotoStreamWidgetsPostBox* self);
void photo_stream_widgets_post_box_loadImage (PhotoStreamWidgetsPostBox* self);
void photo_stream_widgets_post_box_loadLocation (PhotoStreamWidgetsPostBox* self, PhotoStreamUtilsLocation* location);
#define PHOTO_STREAM_WIDGETS_USER_WINDOW_BOX_RELATIONSHIP_WIDTH 100
#define PHOTO_STREAM_WIDGETS_USER_WINDOW_BOX_RELATIONSHIP_HEIGHT 20
PhotoStreamWidgetsUserWindowBox* photo_stream_widgets_user_window_box_new (void);
PhotoStreamWidgetsUserWindowBox* photo_stream_widgets_user_window_box_construct (GType object_type);
void photo_stream_widgets_user_window_box_load (PhotoStreamWidgetsUserWindowBox* self, PhotoStreamUtilsUser* user);
void photo_stream_widgets_user_window_box_loadRelationship (PhotoStreamWidgetsUserWindowBox* self);
void photo_stream_widgets_user_window_box_loadFeed (PhotoStreamWidgetsUserWindowBox* self, GList* feedList);
void photo_stream_widgets_user_window_box_loadPrivate (PhotoStreamWidgetsUserWindowBox* self);
void photo_stream_widgets_user_window_box_clearPrivate (PhotoStreamWidgetsUserWindowBox* self);
void photo_stream_widgets_user_window_box_loadOlderFeed (PhotoStreamWidgetsUserWindowBox* self, GList* feedList);
gint photo_stream_widgets_user_window_box_loadImages (PhotoStreamWidgetsUserWindowBox* self);
GType photo_stream_widgets_comment_box_get_type (void) G_GNUC_CONST;
PhotoStreamWidgetsCommentsList* photo_stream_widgets_comments_list_new (void);
PhotoStreamWidgetsCommentsList* photo_stream_widgets_comments_list_construct (GType object_type);
PhotoStreamWidgetsCommentsList* photo_stream_widgets_comments_list_new_withAvatars (void);
PhotoStreamWidgetsCommentsList* photo_stream_widgets_comments_list_construct_withAvatars (GType object_type);
void photo_stream_widgets_comments_list_addMoreButton (PhotoStreamWidgetsCommentsList* self, gint64 commentsCount);
void photo_stream_widgets_comments_list_append (PhotoStreamWidgetsCommentsList* self, PhotoStreamUtilsComment* post);
void photo_stream_widgets_comments_list_prepend (PhotoStreamWidgetsCommentsList* self, PhotoStreamUtilsComment* post);
void photo_stream_widgets_comments_list_mentionUser (PhotoStreamWidgetsCommentsList* self, const gchar* username);
void photo_stream_widgets_comments_list_clear (PhotoStreamWidgetsCommentsList* self);
void photo_stream_widgets_comments_list_removeCommentReally (PhotoStreamWidgetsCommentsList* self, PhotoStreamWidgetsCommentBox* box);
PhotoStreamWidgetsCommentBox* photo_stream_widgets_comment_box_new (PhotoStreamUtilsComment* comment, gboolean withAvatar);
PhotoStreamWidgetsCommentBox* photo_stream_widgets_comment_box_construct (GType object_type, PhotoStreamUtilsComment* comment, gboolean withAvatar);
GType photo_stream_widgets_hash_tag_list_get_type (void) G_GNUC_CONST;
GType photo_stream_widgets_hash_tag_box_get_type (void) G_GNUC_CONST;
PhotoStreamWidgetsHashTagList* photo_stream_widgets_hash_tag_list_new (void);
PhotoStreamWidgetsHashTagList* photo_stream_widgets_hash_tag_list_construct (GType object_type);
void photo_stream_widgets_hash_tag_list_addMoreButton (PhotoStreamWidgetsHashTagList* self);
void photo_stream_widgets_hash_tag_list_deleteMoreButton (PhotoStreamWidgetsHashTagList* self);
gboolean photo_stream_widgets_hash_tag_list_contains (PhotoStreamWidgetsHashTagList* self, PhotoStreamUtilsTag* tag);
void photo_stream_widgets_hash_tag_list_append (PhotoStreamWidgetsHashTagList* self, PhotoStreamUtilsTag* tag);
void photo_stream_widgets_hash_tag_list_prepend (PhotoStreamWidgetsHashTagList* self, PhotoStreamUtilsTag* tag);
void photo_stream_widgets_hash_tag_list_clear (PhotoStreamWidgetsHashTagList* self);
PhotoStreamWidgetsHashTagBox* photo_stream_widgets_hash_tag_box_new (PhotoStreamUtilsTag* tag);
PhotoStreamWidgetsHashTagBox* photo_stream_widgets_hash_tag_box_construct (GType object_type, PhotoStreamUtilsTag* tag);
GType photo_stream_widgets_user_box_get_type (void) G_GNUC_CONST;
PhotoStreamWidgetsUserList* photo_stream_widgets_user_list_new (void);
PhotoStreamWidgetsUserList* photo_stream_widgets_user_list_construct (GType object_type);
void photo_stream_widgets_user_list_addMoreButton (PhotoStreamWidgetsUserList* self);
void photo_stream_widgets_user_list_deleteMoreButton (PhotoStreamWidgetsUserList* self);
gboolean photo_stream_widgets_user_list_contains (PhotoStreamWidgetsUserList* self, PhotoStreamUtilsUser* user);
void photo_stream_widgets_user_list_append (PhotoStreamWidgetsUserList* self, PhotoStreamUtilsUser* user);
void photo_stream_widgets_user_list_prepend (PhotoStreamWidgetsUserList* self, PhotoStreamUtilsUser* user);
void photo_stream_widgets_user_list_clear (PhotoStreamWidgetsUserList* self);
#define PHOTO_STREAM_WIDGETS_USER_BOX_AVATAR_SIZE 70
#define PHOTO_STREAM_WIDGETS_USER_BOX_RELATIONSHIP_WIDTH 100
#define PHOTO_STREAM_WIDGETS_USER_BOX_RELATIONSHIP_HEIGHT 20
PhotoStreamWidgetsUserBox* photo_stream_widgets_user_box_new (PhotoStreamUtilsUser* user);
PhotoStreamWidgetsUserBox* photo_stream_widgets_user_box_construct (GType object_type, PhotoStreamUtilsUser* user);
void photo_stream_widgets_user_box_loadAvatar (PhotoStreamWidgetsUserBox* self);
void photo_stream_widgets_user_box_loadRelationship (PhotoStreamWidgetsUserBox* self);
PhotoStreamWidgetsHashTagFeedBox* photo_stream_widgets_hash_tag_feed_box_new (void);
PhotoStreamWidgetsHashTagFeedBox* photo_stream_widgets_hash_tag_feed_box_construct (GType object_type);
void photo_stream_widgets_hash_tag_feed_box_loadTag (PhotoStreamWidgetsHashTagFeedBox* self, PhotoStreamUtilsTag* tag);
void photo_stream_widgets_hash_tag_feed_box_loadFeed (PhotoStreamWidgetsHashTagFeedBox* self, GList* posts);
void photo_stream_widgets_hash_tag_feed_box_loadOlderFeed (PhotoStreamWidgetsHashTagFeedBox* self, GList* posts);
#define PHOTO_STREAM_WIDGETS_LOCATION_FEED_BOX_LOCATION_SIZE 25
PhotoStreamWidgetsLocationFeedBox* photo_stream_widgets_location_feed_box_new (void);
PhotoStreamWidgetsLocationFeedBox* photo_stream_widgets_location_feed_box_construct (GType object_type);
void photo_stream_widgets_location_feed_box_loadLocation (PhotoStreamWidgetsLocationFeedBox* self, PhotoStreamUtilsLocation* location);
void photo_stream_widgets_location_feed_box_loadFeed (PhotoStreamWidgetsLocationFeedBox* self, GList* posts);
void photo_stream_widgets_location_feed_box_loadOlderFeed (PhotoStreamWidgetsLocationFeedBox* self, GList* posts);
PhotoStreamWidgetsNewsList* photo_stream_widgets_news_list_new (void);
PhotoStreamWidgetsNewsList* photo_stream_widgets_news_list_construct (GType object_type);
void photo_stream_widgets_news_list_append (PhotoStreamWidgetsNewsList* self, PhotoStreamUtilsNewsActivity* post);
gboolean photo_stream_widgets_news_list_contains (PhotoStreamWidgetsNewsList* self, PhotoStreamUtilsNewsActivity* activity);
void photo_stream_widgets_news_list_prepend (PhotoStreamWidgetsNewsList* self, PhotoStreamUtilsNewsActivity* post);
void photo_stream_widgets_news_list_clear (PhotoStreamWidgetsNewsList* self);
PhotoStreamWidgetsNewsBox* photo_stream_widgets_news_box_new (PhotoStreamUtilsNewsActivity* activity);
PhotoStreamWidgetsNewsBox* photo_stream_widgets_news_box_construct (GType object_type, PhotoStreamUtilsNewsActivity* activity);
GType photo_stream_location_map_window_get_type (void) G_GNUC_CONST;
PhotoStreamWidgetsSearchWindowBox* photo_stream_widgets_search_window_box_new (void);
PhotoStreamWidgetsSearchWindowBox* photo_stream_widgets_search_window_box_construct (GType object_type);
void photo_stream_widgets_search_window_box_addFields (PhotoStreamWidgetsSearchWindowBox* self);
void photo_stream_widgets_search_window_box_typed (PhotoStreamWidgetsSearchWindowBox* self);
void photo_stream_widgets_search_window_box_openSearchLocation (PhotoStreamWidgetsSearchWindowBox* self);
gint photo_stream_widgets_search_window_box_searchTag (PhotoStreamWidgetsSearchWindowBox* self, const gchar* tag);
gint photo_stream_widgets_search_window_box_searchUser (PhotoStreamWidgetsSearchWindowBox* self, const gchar* username);
#define PHOTO_STREAM_WIDGETS_DATE_LABEL_TIME_REFRESH_INTERVAL 10
PhotoStreamWidgetsDateLabel* photo_stream_widgets_date_label_new (GDateTime* time);
PhotoStreamWidgetsDateLabel* photo_stream_widgets_date_label_construct (GType object_type, GDateTime* time);
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_MAPS_API_KEY "AIzaSyCnUHdNP9KhZa33NYdPbOBqkzyzEKlpsR8"
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_ZOOM_INITIAL 13
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_RANGE_INITIAL 1000
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_LATITUDE_INITIAL 55.75
#define PHOTO_STREAM_LOCATION_MAP_WINDOW_LONGITUDE_INITIAL 37.36
PhotoStreamLocationMapWindow* photo_stream_location_map_window_new (void);
PhotoStreamLocationMapWindow* photo_stream_location_map_window_construct (GType object_type);
PhotoStreamLocationMapWindow* photo_stream_location_map_window_new_with_location (PhotoStreamUtilsLocation* location);
PhotoStreamLocationMapWindow* photo_stream_location_map_window_construct_with_location (GType object_type, PhotoStreamUtilsLocation* location);
void photo_stream_location_map_window_initFields (PhotoStreamLocationMapWindow* self);
void photo_stream_location_map_window_loadNearbyLocations (PhotoStreamLocationMapWindow* self);
void photo_stream_location_map_window_loadLocationsList (PhotoStreamLocationMapWindow* self, gdouble latitude, gdouble longitude);
void photo_stream_location_map_window_parseTitle (PhotoStreamLocationMapWindow* self);
GType photo_stream_widgets_media_window_get_type (void) G_GNUC_CONST;
PhotoStreamWidgetsMediaWindow* photo_stream_widgets_media_window_new (const gchar* fileName, gboolean video);
PhotoStreamWidgetsMediaWindow* photo_stream_widgets_media_window_construct (GType object_type, const gchar* fileName, gboolean video);
void photo_stream_widgets_media_window_loadVideo (PhotoStreamWidgetsMediaWindow* self, const gchar* fileName);
void photo_stream_widgets_media_window_switchVideoPlayback (PhotoStreamWidgetsMediaWindow* self);
PhotoStreamMainWindow* photo_stream_main_window_new (void);
PhotoStreamMainWindow* photo_stream_main_window_construct (GType object_type);
PhotoStreamLoginWindow* photo_stream_login_window_new (void);
PhotoStreamLoginWindow* photo_stream_login_window_construct (GType object_type);
gchar* photo_stream_login_window_getHost (PhotoStreamLoginWindow* self, const gchar* uri);
gchar* photo_stream_login_window_getCode (PhotoStreamLoginWindow* self, const gchar* uri);
void photo_stream_login_window_confirmToken (PhotoStreamLoginWindow* self, const gchar* uri);
PhotoStreamSettingsWindow* photo_stream_settings_window_new (void);
PhotoStreamSettingsWindow* photo_stream_settings_window_construct (GType object_type);
void photo_stream_settings_window_loadSettings (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_logOutConfirm (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_logOut (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_initAlignments (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_submitSettingsConfirm (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_loadAppSettings (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_clearCache (PhotoStreamSettingsWindow* self);
void photo_stream_settings_window_submitSettingsReally (PhotoStreamSettingsWindow* self, PhotoStreamUtilsUser* user, PhotoStreamUtilsSettings* settings);
GType photo_stream_bulk_download_window_get_type (void) G_GNUC_CONST;
PhotoStreamBulkDownloadWindow* photo_stream_bulk_download_window_new (const gchar* id);
PhotoStreamBulkDownloadWindow* photo_stream_bulk_download_window_construct (GType object_type, const gchar* id);


G_END_DECLS

#endif
